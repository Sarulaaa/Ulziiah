* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  min-height: 100vh;
  overflow: hidden;

  background: repeating-radial-gradient(
    circle at center,
    #444 0 10%,
    #111 10% 20%
  );

  touch-action: none;
}

canvas {
  width: 100%;
  height: auto;
  object-fit: contain;
}

.control {
  display: grid;
  place-content: center;
  position: absolute;
  width: 200px;
  height: 200px;
  inset: 0;
  margin: auto;
}

.control_label {
  opacity: 0;
  display: grid;
  place-content: center;
  transition: opacity 1200ms cubic-bezier(0.075, 0.82, 0.165, 1);
}

.control.initial .control_label {
  opacity: 1;
}

.control:hover .control_label {
  opacity: 1;
}

.control_display,
.control_input {
  grid-row: 1/-1;
  grid-column: 1/-1;
  position: relative;
  cursor: pointer;
}

.control_display {
  display: grid;
  place-content: center;
  font-size: 0.825em;
  font-weight: 500;
}

.control_display svg {
  display: inline-block;
  stroke-linejoin: round;
  stroke-width: 2px;
  transition: 50ms;
  transform: scale(1.1);
}

.control_display svg .icon {
  stroke-linecap: round;
  stroke-width: 4px;
  stroke: rgb(197 75 110 / 90%);
  fill: none;
}

input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  position: relative;
  margin: 0;
  width: 6em;
  height: 6em;
  transform: scale(1);
  font: inherit;
  color: currentColor;
  border-width: 0.15rem;
  border-style: solid;
  border-radius: 4px;
  border-color: rgb(0 0 0);
  display: grid;
  place-content: center;
  background: rgb(17 17 17 / 60%);
  box-shadow: 0px 0px 22px 0 rgb(197 75 110 / 90%);
}

input[type="checkbox"]:hover {
  transform: scale(1.1);
  transition: 300ms cubic-bezier(0.075, 0.82, 0.165, 1);
}

input[type="checkbox"]:hover + .control_display svg .icon {
  stroke: rgb(111 162 250 / 90%);
}
input[type="checkbox"]:is(:checked, :active) {
  box-shadow: 0px 0px 22px 0 rgb(111 162 250 / 90%);
}
input[type="checkbox"]:is(:checked, :active),
input[type="checkbox"]:is(:checked, :active) + .control_display svg {
  transform: scale(1);
}
input[type="checkbox"]:is(:checked, :active) + .control_display svg .icon {
  fill: rgb(111 162 250 / 90%);
  stroke: transparent;
}

input[type="checkbox"]::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  box-shadow: 0 2px 20px 2px rgb(111 163 250);
  opacity: 0;
  transform: scale(0.95);
  transition: 400ms;
}

input[type="checkbox"]:hover::after {
  transform: scale(1.05);
  opacity: 1;
}

input[type="checkbox"]:is(:checked, :active)::after {
  box-shadow: 0 2px 20px 20px rgb(111 163 250);
}
